方法一：
使用jQuery的ajax解决跨域问题，缺点：只能使用get请求方法，不能使用post

$.ajax({
        type: "get",
        data: pars,
        url: geturl,
        dataType: "jsonp",
        jsonp: "js",  //设置传到后台方法的参数
        jsonpCallback: "callback111",   //设置函数名
        success: function (msg) {
            console.log(msg)
       }
});


json与jsonp格式的区别
json格式：
{
    "message":"获取成功",
    "state":"1",
    "result":{"name":"工作组1","id":1,"description":"11"}
}

jsonp格式：
callback({
    "message":"获取成功",
    "state":"1",
    "result":{"name":"工作组1","id":1,"description":"11"}
})


方法二：使用jquery-jsonp插件
 //跨域方法二
    var url = "http://dcfm.eastmoney.com/em_mutisvcexpandinterface/api/js/get?js=callback2((x))";
    $.jsonp({
         type: "get",
         data: pars,
         "url": url,
         callbackParameter: "js", //设置传到后台方法的参数
         callback: "callback2", //设置函数名
        "success": function (data) {
            console.log('方法二')
            console.log(data)
        },
        "error": function (msg) {
            console.log("Could not find user " + msg);
        }
});


方法三：使用基于promise和node.js环境的axios
get2: async function(url, pars) {
        var url = "http://dcfm.eastmoney.com/em_mutisvcexpandinterface/api/js/get?js=callback111((x))";
        var pars = {
            token: "70f12f2f4f091e459a279469fe49eca5",
            st: "xzkltgfsl",
            sr: -1,
            p: 1,
            ps: 1,
            type: "XSJJ_NJ_GD",
            filter: "(gdmc='" + '其实' + "')"
        };
        try {
            let back = await axios.get(url, {
                params: pars
            });

            return back.data
        } catch (error) {
        
        }

    }


还有其他方法：
1）porxy代理-----通过服务器发送请求
2）cors--后端人员处理，添加允许跨域的相关操作



